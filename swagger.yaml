openapi: 3.0.0
info:
  title: "ProxyPay API"
  version: "1.0.0"
  x-logo:
    url: "/imgs/proxypay-docs.png"
    backgroundColor: "#FFFFFF"
    altText: "ProxyPay API - Documentação"

tags:
  - name: "Quem somos"
    description: API responsável por abstrair gateways de pagamento (adquirentes e subadquirentes) por meio de endpoints únicos.
  - name: Códigos de retorno para criação de transações
    description: |-
      | status | sucesso? | descrição |
      |:-------|:----|:--------|
      | `Success` | yes | Sucesso |
      | `GenericError` | no | Genérica |
      | `InsufficientFunds` | no | Saldo/limite insuficiente |
      | `InvalidPassword` | no | Senha inválida |
      | `NotAllowed` | no | Transação não permitida para o cartão |
      | `InvalidCardNumber` | no | Número cartão não pertence ao emissor | número cartão inválido |
      | `SecurityViolation` | no | Violação de segurança |
      | `SuspectedFraud` | no | Suspeita de fraude |
      | `InvalidMerchant` | no | Comerciante inválido |
      | `RetryRequired` | no | Refazer a transação (emissor solicita retentativa) |
      | `ConsultAccreditation` | no | Consultar credenciador |
      | `AcquirerProblem` | no | Problema no adquirente |
      | `CardError` | no | Erro no cartão |
      | `FormatError` | no | Erro de formato (mensageria) |
      | `InvalidTransactionValue` | no | Valor da transação inválida |
      | `InvalidInstallmentValue` | no | Valor da parcela inválida |
      | `PasswordAttemptsExceeded` | no | Excedidas tentativas de senha | compras |
      | `LostCard` | no | Cartão perdido |
      | `StolenCard` | no | Cartão roubado |
      | `ExpiredCard` | no | Cartão vencido / dt expiração inválida |
      | `TransactionNotAllowed` | no | Transação não permitida | capacidade do terminal |
      | `ValueExceeded` | no | Valor excesso | saque |
      | `InternationalTransactionWithLocalCard` | no | Cartão doméstico - transação internacional |
      | `InvalidMinValue` | no | Valor mínimo da transação inválido |
      | `ExceededWithdrawQuantity` | no | Quant. de saques excedido |
      | `ExpiredPassword` | no | Senha vencida / erro de criptografia de senha |
      | `PasswordAttemptsExceededWithdraw` | no | Excedidas tentativas de senha | saque |
      | `InvalidDestinationAccount` | no | Conta destino inválida ou inexistente |
      | `InvalidOriginAccount` | no | Conta origem inválida ou inexistente |
      | `CardStillBlocked` | no | Cartão novo sem desbloqueio |
      | `InvalidCard` | no | Cartão inválido (criptograma) |
      | `IssuerOutOfService` | no | Emissor fora do ar |
      | `SystemFailure` | no | Falha do sistema |
      | `DiffPreAuthorization` | no | Diferença - pré autorização |
      | `InvalidFunctionDebit` | no | Função incorreta (débito) |
      | `InvalidFunctionCredit` | no | Função incorreta (crédito) |
      | `ChangePassword` | no | Troca de senha / desbloqueio |
      | `NewPasswordNotAccepted` | no | Nova senha não aceita |
      | `CollectCard` | no | Recolher cartão (não há fraude) |
      | `DynamicKeyChangeError` | no | Erro por mudança de chave dinâmica |
      | `FraudConfirmed` | no | Fraude confirmada |
      | `EmitterNotFound` | no | Emissor ñ localizado - bin incorreto |
      | `NotAllowedByMoneyLaundryLaw` | no | (negativa do adquirente) não cumprimento pelas leis de ante lavagem de dinheiro |
      | `InvalidRollback` | no | Reversão inválida |
      | `NotFoundByRouter` | no | Não localizado pelo roteador |
      | `DeniedByInfractionLaw` | no | Transação negada por infração de lei |
      | `DuplicateTracingData` | no | Valor do tracing data duplicado |
      | `UnsupportedSurchage` | no | Surcharge não suportado |
      | `UnsupportedSurchageDebitNetwork` | no | Surcharge não suportado pela rede de débito |
      | `StripForce` | no | Forçar stip |
      | `WithdrawNotAvailable` | no | Saque não disponível |
      | `ServiceRecurrencySuspension` | no | Suspensão de pagamento recorrente para um serviço |
      | `AllServiceRecurrencySuspension` | no | Suspensão de pagamento recorrente para todos serviço |
      | `TransactionLotQualifiedVisaPin` | no | Transação não qualificada para visa pin |
      | `AllAuthorizationOrderSuspended` | no | Suspensão de todas as ordens de autorização |
      | `RegisterNotFoundInFile` | no | Não é possível localizar o registro no arquivo |
      | `FileNotAvailableForUpdate` | no | Arquivo não disponível para atualização |
      | `RejectedCancel` | no | Cancelamento não efetuado. transação não localizada. |
      | `ApprovedTransactionCancel` | no | Transação de cancelamento autorizada com sucesso. atençâo: esse retorno é para casos de cancelamentos e não para casos de autorizações. |
  - name: Lista de situações da transação
    description: |-
      | Status | Descrição |
      | :------- | :--------- |
      | `NotFinished` | Aguardando atualização de status |
      | `Authorized` | Pagamento apto a ser capturado ou definido como pago |
      | `PaymentConfirmed` | Pagamento confirmado e finalizado |
      | `Denied` | Pagamento negado por Autorizador |
      | `Voided` | Pagamento cancelado |
      | `Refunded` | Pagamento cancelado após 23:59 do dia de autorização |
      | `Pending` | Aguardando Status de instituição financeira |
      | `Aborted` | Pagamento cancelado por falha no processamento ou por ação do AF |
      | `Scheduled` | Recorrência agendada |
  - name: Lista de situações da transação de antifraude
    description: |-
      | Status | Descrição |
      | :------- | :--------- |
      | `UNKNOWN` | Situação não mapeada |
      | `APPROVED` | Transação aprovada no sistema antifraude |
      | `REJECTED` | Transação não aprovada no sistema antifraude |
  - name: "Postman collection"
    description: https://documenter.getpostman.com/view/483953/TzCMeUQF

servers:
  - url: https://api-sandbox.proxypay.com.br/v1
    description: Endpoint Sandbox v1 (usa dados de teste)

x-tagGroups:
- name: Sobre
  tags:
    - Quem somos
- name: Ref. códigos da API
  tags:
    - Postman collection
    - Códigos de retorno para criação de transações
    - Lista de situações da transação
- name: Endpoints
  tags:
    - Transação

paths:
  /transaction:
    post:
      tags:
        - Transação
      summary: "Criação"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionCreation"
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionCreationResult"
        400:
          description: "Erro de validação"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
  /transaction/{gatewayCode}/{transactionId}:
    get:
      tags:
        - Transação
      summary: "Consulta"
      parameters:
        - in: path
          name: "gatewayCode"
          schema:
            type: "string"
          required: true
          description: "Código do gateway onde a transação foi criada"
          example: "cielo"
        - in: path
          name: "transactionId"
          schema:
            type: "string"
          required: true
          description: "Id da transação gerada pelo gateway na criação"
          example: "13adc203-bb0a-4f5f-932e-3e6350e18504"
      responses:
        200:
          description: "Transação"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        404:
          description: "Transação não encontrada"
    put:
      tags:
        - Transação
      summary: "Captura"
      description: "Captura uma transação previamente autorizada"
      parameters:
        - in: path
          name: "gatewayCode"
          schema:
            type: "string"
          required: true
          description: "Código do gateway onde a transação foi criada"
          example: "cielo"
        - in: path
          name: "transactionId"
          schema:
            type: "string"
          required: true
          description: "Id da transação gerada pelo gateway na criação"
          example: "13adc203-bb0a-4f5f-932e-3e6350e18504"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionCapture"
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionCaptureResult"
        404:
          description: "Transação não encontrada"
  /transaction/{gatewayCode}/{transactionId}/refunds:
    post:
      tags:
        - Transação
      summary: "Cancelamento"
      parameters:
        - in: path
          name: "gatewayCode"
          schema:
            type: "string"
          required: true
          description: "Código do gateway onde a transação foi criada"
          example: "cielo"
        - in: path
          name: "transactionId"
          schema:
            type: "string"
          required: true
          description: "Id da transação gerada pelo gateway na criação"
          example: "13adc203-bb0a-4f5f-932e-3e6350e18504"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRefund"
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionRefundResult"
        404:
          description: "Transação não encontrada"

security:
  - clientIdAndSecretBasic: []

components:
  securitySchemes:
    clientIdAndSecretBasic:
      description: >
        Para acessar os endpoints da API é necessário usar HTTP Basic Auth com um `clientId` e `clientSecret`. Exemplo:


        Usando `my-client-id` como `clientId` e `my-client-secret` como `clientSecret`:


        Junte ambos com `:` e codifique em base64, no exemplo, o resultado é `bXktY2xpZW50LWlkOm15LWNsaWVudC1zZWNyZXQ=`. Então, seu header `Authorization` será:


        `Authorization: Basic bXktY2xpZW50LWlkOm15LWNsaWVudC1zZWNyZXQ=`.
      type: http
      scheme: basic

  schemas:
    TransactionCreation:
      type: "object"
      required:
      - "reference"
      - "amount"
      - "cardNumber"
      - "expirationMonth"
      - "expirationYear"
      properties:
        capture:
          type: "boolean"
          description: "Flag para capturar a quantia enviada (`true`) ou apenas autorizar (`false`): **Default:** `false`"
          example: true
        reference:
          type: "string"
          description: "Usado para identificar a transacão (ex. num. do pedido no sistema do comerciante). **Comprimento <= 16**"
          example: "my-unique-order-number-1234"
        amount:
          type: "integer"
          description: "Valor da transação em centavos. Ex.: R$ 0,50 => `50` ou R$ 1000,50 => `100050`). **Valor >= 1**"
          example: 100050
        installments:
          type: "integer"
          description: "Número de parcelas. **Valor >= 1 e <= 255. Default:** `1`"
          example: 12
        cardNumber:
          type: "string"
          description: "Número do cartão, apenas números. Ex: para o número *5555.5555.5555.4444* será enviado `5555555555554444`"
          example: "5555555555554444"
        expirationMonth:
          type: "integer"
          description: "Mês de expiração do cartão, apenas números. Valores entre `1` e `12`"
          example: 11
        expirationYear:
          type: "integer"
          description: "Ano de expiração do cartão, apenas números. Formato *9999*, Ex: `2028`"
          example: 2028
        cardHolderName:
          type: "string"
          description: "Nome impresso no cartão, Ex: `JOAO DA SILVA`"
          example: "JOHN DOE"
        securityCode:
          type: "string"
          description: "Codigo de segurança (CVV), formato *999*, E.g.: `123`"
          example: "123"
        currency:
          type: "string"
          description: "Código ISO 4217 da moeda"
          example: "BRL"
        customer:
          type: "object"
          description: "Informações do cliente"
          properties:
            id:
              type: "string"
              description: "Id do cliente"
              example: "123"
            name:
              type: "string"
              description: "Nome do cliente"
              example: "José Alencar"
            email:
              type: "string"
              description: "E-mail do cliente"
              example: "jose@alencar.com"
            type:
              type: "string"
              description: "Tipo do cliente (\"NATURAL_PERSON\" para pessoa física e \"LEGAL_ENTITY\" para pessoa jurídica)"
              enum:
                - NATURAL_PERSON
                - LEGAL_ENTITY
              example: "NATURAL_PERSON"
            primaryPhone:
              type: "string"
              description: "Telefone principal do cliente"
              example: "11912345678"
            secondaryPhone:
              type: "string"
              description: "Telefone secundário do cliente"
              example: "1112345678"
        billing:
          type: "object"
          description: "Informações de cobrança"
          properties:
            name:
              type: "string"
              description: "Nome utilizado para cobrança"
              example: "João Souza"
            document:
              type: "string"
              description: "Documento utilizado para cobrança"
              example: "12345678900"
            address:
              $ref: "#/components/schemas/Address"
              description: "Endereço utilizado para cobrança"
        shipping:
          type: "object"
          description: "Informações de entrega"
          properties:
            name:
              type: "string"
              description: "Nome utilizado para entrega"
              example: "João Souza"
            document:
              type: "string"
              description: "Documento utilizado para entrega"
              example: "12345678900"
            address:
              $ref: "#/components/schemas/Address"
              description: "Endereço utilizado para entrega"
        items:
          type: "array"
          description: "Itens da compra relacionada à transação"
          $ref: "#/components/schemas/TransactionCreationItem"
        gateway:
          type: "object"
          description: "Gateway desejado. Utilizado para forçar o uso de um gateway específico. É possível utilizar gateways com o status *homologação*."
          properties:
            id:
              type: "integer"
              description: "Id do gateway"
              example: "99"
            code:
              type: "string"
              description: "Código do gateway (`cielo`, `rede`...)"
              example: "cielo"
        antifraud:
          type: "object"
          description: "Antifraude desejado. Utilizado para forçar o uso de um antifraude específico. É possível utilizar antifraudes com o status *homologação*."
          properties:
            id:
              type: "integer"
              description: "Id do antifraude"
              example: "99"
            code:
              type: "string"
              description: "Código do antifraude"
              example: "clearsale"
    TransactionCreationItem:
      type: "object"
      properties:
        code:
          type: "string"
          description: "Código único do item"
          example: "92821982"
        barCode:
          type: "string"
          description: "Código de barras item"
          example: "1128731289738219"
        name:
          type: "string"
          description: "Nome item"
          example: "Boné Preto"
        unitCost:
          type: "integer"
          description: "Valor do item em centavos. Ex.: R$ 0,50 => `50` ou R$ 1000,50 => `100050`). **Valor >= 1**"
          example: 2999
        quantity:
          type: "integer"
          description: "Quantidade de unidades do item"
          example: 2
    TransactionCreationResult:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Transação feita com sucesso (`true`) ou não (`false`)"
          example: true
        status:
          type: "string"
          description: "Status da criação da transação. Veja a lista completa [aqui](#tag/Codigos-de-retorno-para-criacao-de-transacoes)"
          enum:
            - Success
            - GenericError
            - InsufficientFunds
            - InvalidPassword
          example: Success
        gatewayCode:
          type: "string"
          description: "Código do gateway usado na transação"
          example: "cielo"
        gatewayReturnCode:
          type: "string"
          description: "Código retornado pelo gateway sem tratamento"
          example: "00"
        gatewayReturnMessage:
          type: "string"
          description: "Mensagem retornada pelo gateway sem tratamento"
          example: "Operation Successful"
        cardBrand:
          type: "string"
          description: "Bandeira do cartão retornada pelo gateway"
          example: "visa"
        reference:
          type: "string"
          description: "Usado para identificar a transacão (ex. num do pedido no sistema do comerciante)"
          example: "my-unique-order-number-1234"
        transactionId:
          type: "string"
          description: "Identificador da transação. Neste caso, um UUID, porém **esse valor é gerado pelo Gateway**, portanto considere qualquer string para identificação pois cada gateway utiliza um tipo de ID diferente."
          example: "13adc203-bb0a-4f5f-932e-3e6350e18504"
        authCode:
          type: "string"
          description: "Código de autorização retornado pelo emissor"
          example: "760946"
        links:
          type: "array"
          items:
            $ref: "#/components/schemas/Link"
        antifraudResult:
          description: "Se habilitado, resultado do processamento do sistema antifraude"
          $ref: "#/components/schemas/TransactionCreationAntifraudResult"
    TransactionCreationAntifraudResult:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Transação antifraude feita com sucesso (`true`) ou não (`false`)"
          example: true
        status:
          type: "string"
          description: "Status da criação da transação de antifraude. Veja a lista completa [aqui](#tag/Lista-de-situacoes-da-transacao-de-antifraude)"
          enum:
            - UNKNOWN
            - APPROVED
            - REJECTED
          example: APPROVED
        antifraudCode:
          type: "string"
          description: "Código do sistema antifraude usado na transação"
          example: "clearsale"
        antifraudReturnCode:
          type: "string"
          description: "Código retornado pelo sistema antifraude sem tratamento"
          example: "APA"
        antifraudReturnMessage:
          type: "string"
          description: "Mensagem retornada pelo sistema antifraude sem tratamento"
          example: "Order created"
    Transaction:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Identificador da transação. Neste caso, um UUID, porém **esse valor é gerado pelo Gateway**, portanto considere qualquer string para identificação pois cada gateway utiliza um tipo de ID diferente."
          example: "13adc203-bb0a-4f5f-932e-3e6350e18504"
        success:
          type: "boolean"
          description: "Transação feita com sucesso (`true`) ou não (`false`)"
          example: true
        status:
          type: "string"
          description: "Situação da transação. Veja a descrição completa [aqui](#tag/Lista-de-situacoes-da-transacao)"
          enum:
            - "NotFinished"
            - "Authorized"
            - "PaymentConfirmed"
            - "Denied"
            - "Voided"
            - "Refunded"
            - "Pending"
            - "Aborted"
            - "Scheduled"
          example: "Authorized"
        reference:
          type: "string"
          description: "Usado para identificar a transacão (ex. num do pedido no sistema do comerciante)"
          example: "my-unique-order-number-1234"
        amount:
          type: "integer"
          description: "Valor da transação em centavos. Ex.: R$ 0,50 => `50` ou R$ 1000,50 => `100050`)."
          example: 100050
        installments:
          type: "integer"
          description: "Número de parcelas"
          example: 12
        currency:
          type: "string"
          description: "Código da moeda"
          example: "BRL"
        cardBin:
          type: "string"
          description: "Bin do cartão (primeiros 6 dígitos)"
          example: "555555"
        cardLastDigits:
          type: "string"
          description: "Últimos 4 dígitos do cartão"
          example: "4444"
        expirationMonth:
          type: "integer"
          description: "Mês de expiração do cartão"
          example: 11
        expirationYear:
          type: "integer"
          description: "Ano de expiraçao do cartão"
          example: 2028
        cardHolderName:
          type: "string"
          description: "Nome impresso no cartão, E.g.: `JOAO DA SILVA`"
          example: "JOHN DOE"
        softDescriptor:
          type: "string"
          description: "Usado para identificar a transacão na fatura do cliente. **Comprimento <= 13**"
          example: "MENSALIDADE"
        authCode:
          type: "string"
          description: "Código de autorização retornado pelo emissor"
          example: "760946"
        capture:
          $ref: "#/components/schemas/Refund"
        refund:
          $ref: "#/components/schemas/Refund"
        links:
          type: "array"
          items:
            $ref: "#/components/schemas/Link"
    Capture:
      type: "object"
      description: "Caso a transação tenha sido capturada esses valores virão preenchidos"
      properties:
        dateTime:
          type: "string"
          description: "Data e hora da captura em formato ISO"
          example: "2021-04-17T15:51:18-03:00"
        amount:
          type: "integer"
          description: "Valor da captura em centavos. Ex.: R$ 0,50 => `50` ou R$ 1000,50 => `100050`)."
          example: 2000
    Refund:
      type: "object"
      description: "Caso a transação tenha sido cancelada esses valores virão preenchidos"
      properties:
        dateTime:
          type: "string"
          description: "Data e hora do cancelamento em formato ISO"
          example: "2021-04-18T15:51:18-03:00"
        amount:
          type: "integer"
          description: "Valor do cancelamento em centavos. Ex.: R$ 0,50 => `50` ou R$ 1000,50 => `100050`)."
          example: 2000
    Link:
      type: "object"
      properties:
        method:
          type: "string"
          description: "Método HTTP"
          example: "PUT"
        rel:
          type: "string"
          description: "Relação do endpoint com a transação"
          example: "capture"
        url:
          type: "string"
          description: "Path para a operação"
          example: "/v1/transaction/cielo/13adc203-bb0a-4f5f-932e-3e6350e18504"
    Address:
      type: "object"
      properties:
        street:
          type: "string"
          description: "Rua do endereço"
          example: "Rua X"
        number:
          type: "string"
          description: "Número do endereço"
          example: "911"
        complement:
          type: "string"
          description: "Complemento do endereço"
          example: "Ap 91"
        neighborhood:
          type: "string"
          description: "Bairro do endereço"
          example: "Vila Clementino"
        city:
          type: "string"
          description: "Cidade do endereço"
          example: "São Paulo"
        state:
          type: "string"
          description: "Estado do endereço"
          example: "SP"
        zipcode:
          type: "string"
          description: "Código postal do endereço"
          example: "01122000"
        country:
          type: "string"
          description: "Páis do endereço (ISO 3166-2)"
          example: "BR"
    TransactionCapture:
      type: "object"
      description: "Capturar a transação"
      properties:
        amount:
          type: "integer"
          description: "Valor da captura em centavos. Ex.: R$ 0,50 => `50` ou R$ 1000,50 => `100050`)."
          example: 2000
    TransactionCaptureResult:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Transação capturada com sucesso (`true`) ou não (`false`)"
          example: true
        gatewayCode:
          type: "string"
          description: "Código do gateway usado nessa transação"
          example: "cielo"
        gatewayReturnCode:
          type: "string"
          description: "Código retornado pelo gateway sem tratamento"
          example: "00"
        gatewayReturnMessage:
          type: "string"
          description: "Mensagem retornada pelo gateway sem tratamento"
          example: "Operation Successful"
        authCode:
          type: "string"
          description: "Código de autorização retornado pelo emissor"
          example: "760946"
        links:
          type: "array"
          items:
            $ref: "#/components/schemas/Link"
    TransactionRefund:
      type: "object"
      description: "Cancelamento de transação"
      properties:
        amount:
          type: "integer"
          description: "Valor do cancelamento em centavos. Ex.: R$ 0,50 => `50` ou R$ 1000,50 => `100050`)."
          example: 2000
    TransactionRefundResult:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Transação capturada com sucesso (`true`) ou não (`false`)"
          example: true
        gatewayCode:
          type: "string"
          description: "Código do gateway usado nessa transação"
          example: "cielo"
        gatewayReturnCode:
          type: "string"
          description: "Código retornado pelo gateway sem tratamento"
          example: "00"
        gatewayReturnMessage:
          type: "string"
          description: "Mensagem retornada pelo gateway sem tratamento"
          example: "Operation Successful"
        links:
          type: "array"
          items:
            $ref: "#/components/schemas/Link"
    ValidationError:
      type: "object"
      properties:
        "[nome do campo]":
          type: "string"
          description: "Mensagem de erro"
          example: "must be no less than 1"
